#!/bin/sh

set -e

case "$1" in
  configure)

    PHP_VERSION=`echo "<?php echo PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;" | php`

    if grep -q "fastcgi_pass unix:/run/php/php-fpm.sock" "/etc/nginx/sites-available/cmprovision"; then

        # Change nginx configuration to point to exact PHP version socket file
        echo "PHP version detected: $PHP_VERSION"
        sed -i "s#/run/php/php-fpm.sock#/run/php/php${PHP_VERSION}-fpm.sock#" "/etc/nginx/sites-available/cmprovision"
        echo "Changed socket file to /run/php/php${PHP_VERSION}-fpm.sock in /etc/nginx/sites-available/cmprovision"
    fi

    if ! groups www-data | grep -q systemd-journal; then
        # Allow webserver user to read logs
        adduser www-data systemd-journal
    fi

    if [ ! -e /var/lib/cmprovision/.env ]; then

        # Set Laravel app key
        install -o www-data -g www-data -m 600 /var/lib/cmprovision/env.example /var/lib/cmprovision/.env
        /var/lib/cmprovision/artisan key:generate
        /var/lib/cmprovision/artisan config:cache

        # Make sure log is owned by www-data
        touch /var/lib/cmprovision/storage/logs/laravel.log
        chown www-data:www-data /var/lib/cmprovision/storage/logs/laravel.log

        # Enlarge php-fpm file upload size
        echo "Enlarging php maximum file upload size"
        PHP_INI=`echo "<?php echo str_replace('cli', 'fpm', php_ini_loaded_file() );" | php`
        sed -i "s/upload_max_filesize = 2M/upload_max_filesize = 8G/" "$PHP_INI"
        sed -i "s/post_max_size = 8M/post_max_size = 8G/" "$PHP_INI"
        deb-systemd-invoke restart php${PHP_VERSION}-fpm || true

        # Enable site in nginx
        echo "Enabling CM provision webinterface in nginx"
        ln -sf /etc/nginx/sites-available/cmprovision /etc/nginx/sites-enabled/cmprovision
        rm -f /etc/nginx/sites-enabled/default
        deb-systemd-invoke restart nginx || true
    fi

    if [ ! -e /var/lib/cmprovision/database/database.sqlite ]; then
        touch /var/lib/cmprovision/database/database.sqlite
        chown www-data:www-data /var/lib/cmprovision/database/database.sqlite
        chmod 600 /var/lib/cmprovision/database/database.sqlite
        echo "Initializing database"
        /var/lib/cmprovision/artisan migrate --seed
    else
        /var/lib/cmprovision/artisan migrate
    fi

  ;;
esac

# Automatically added by dh_systemd_enable/12.10ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'cmprovision-dnsmasq.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'cmprovision-dnsmasq.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'cmprovision-dnsmasq.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'cmprovision-dnsmasq.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_enable/12.10ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'cmprovision-rpiboot.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'cmprovision-rpiboot.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'cmprovision-rpiboot.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'cmprovision-rpiboot.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_start/12.10ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		deb-systemd-invoke start 'cmprovision-dnsmasq.service' 'cmprovision-rpiboot.service' >/dev/null || true
	fi
fi
# End automatically added section


exit 0
